#define NUM_EXPlOSIONS 5.
#define NUM_PARTICLE 75.

vec2 Hash12(float t){
    float x = fract(sin(t*674.3)*453.2);
    float y = fract(sin((t+x)*714.3)*263.2);
    return vec2(x, y);
}

vec2 Hash12_Polar(float t){
    float a = fract(sin(t*674.3)*453.2)*6.2832;
    float d = fract(sin((t+a)*714.3)*263.2);

    return vec2(sin(a), cos(a))*d;
}

float Explosion(vec2 uv, float t){
   float sparks = 0.;
   for(float i=0.; i<NUM_PARTICLE; i++){
        vec2 dir = Hash12_Polar(i+1.)*.5;
        float d = length(uv-dir*t);
         
        float brightness = mix(.0005, .002, smoothstep(.05, 0., t));  
        
        brightness *= sin(t*20.+i)*.5+.5;
        brightness *= smoothstep(1., .75, t);
        sparks +=  brightness/d;
    }
    return sparks;
} 

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = (fragCoord -.5*iResolution.xy)/iResolution.y;

    vec3 col = vec3(0);
    for(float i=0.; i<NUM_EXPlOSIONS; i++){
        float t = iTime + i/NUM_EXPlOSIONS;
        float ft = floor(t);
        vec3 color = sin(vec3(.34, .54, .43)*ft)*.25+.75  ;
        vec2 offs = Hash12(i+1.+ft)-.5;
        offs *= vec2(1.77, 1.);
        //col += .0004/length(uv-offs);
        col += Explosion(uv-offs, fract(t))* color;

    }
    col*=2.;
    fragColor = vec4(col,1.0);
}

